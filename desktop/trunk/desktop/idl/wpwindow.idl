/* ***** BEGIN LICENSE BLOCK *****
* Version: CDDL 1.0/LGPL 2.1
*
* The contents of this file are subject to the COMMON DEVELOPMENT AND
* DISTRIBUTION LICENSE (CDDL) Version 1.0 (the "License"); you may not use
* this file except in compliance with the License. You may obtain a copy of
* the License at http://www.sun.com/cddl/
*
* Software distributed under the License is distributed on an "AS IS" basis,
* WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
* for the specific language governing rights and limitations under the
* License.
*
* The Original Code is "NOM" Netlabs Object Model
*
* The Initial Developer of the Original Code is
* netlabs.org: Chris Wohlgemuth <cinc-ml@netlabs.org>.
* Portions created by the Initial Developer are Copyright (C) 2005-2006
* the Initial Developer. All Rights Reserved.
*
* Contributor(s):
*
* Alternatively, the contents of this file may be used under the terms of
* the GNU Lesser General Public License Version 2.1 (the "LGPL"), in which
* case the provisions of the LGPL are applicable instead of those above. If
* you wish to allow use of your version of this file only under the terms of
* the LGPL, and not to allow others to use your version of this file under
* the terms of the CDDL, indicate your decision by deleting the provisions
* above and replace them with the notice and other provisions required by the
* LGPL. If you do not delete the provisions above, a recipient may use your
* version of this file under the terms of any one of the CDDL or the LGPL.
*
* ***** END LICENSE BLOCK ***** */

#ifndef WPWINDOW_IDL_INCLUDED
#define WPWINDOW_IDL_INCLUDED

#if 0
#ifndef WPObject_defined
#define WPObject_defined
native PWPObject;
#endif
#endif

#include <nomobj.idl>
#include "nomwindow.idl"
#include "nomstring.idl"

NOMCLASSNAME(WPWindow);

#if 1
#ifndef WPOBJECT_IDL_INCLUDED
native PWPObject;
#endif
#else
#include "wpobject.idl"
#endif

interface WPWindow : NOMWindow
{
  NOMCLASSVERSION(1, 0);

  /**
     Instances of the WPWindow class (or subclasses of WPWindow) are usually created
     by desktop classes. For example WPFolderWindow instances (folder views) or
     WPNoteBook instances (settings notebooks). This method is used so the desktop class
     can save a pointer to itself for use from within the WPWindow class code.
  
     \remark Note that this method is \b not a wrapper around
     \code 
     g_object_set_data(G_OBJECT(window), NOMOBJECT_KEY_STRING, nomSelf);
     \endcode
     That call is used internally by the WPWindow class to connect a WPWindow instance
     (nomSelf in this call) with a GTK window.

     \par How to override:
     This method is usually not overriden.

     \param wpObject The desktop object this window belongs to.

     \par Example:
     The follwing code is a method implementation of class WPFolder. It creates a new
     folder window (of class WPFolderWindow) and uses wpSetWPObject() to connect the folder
     object (nomSelf) with the folder window.
     \include wpsetwpobject.c

     \sa wpQueryWPObject()
   */
  void wpSetWPObject(in PWPObject wpObject);

  /**
     Query the desktop object this window belongs to.

     \remark Note that this method is \b not a wrapper around
     \code 
     g_object_get_data(G_OBJECT(window), NOMOBJECT_KEY_STRING);
     \endcode
     Using that call one queries the window object (\b not the desktop object) from
     a GTK toplevel window.

     \par How to override:
     This method is usually not overriden.

     \sa wpSetWPObject()
  */
  PWPObject wpQueryWPObject();
  void wpSetWindowTitle(in PNOMString newTitle);
  NOMINSTANCEVAR(PWPObject wpObject);
};

#endif /* WPWINDOW_IDL_INCLUDED */




